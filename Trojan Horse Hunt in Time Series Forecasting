{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f00184ca",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-08-21T19:30:30.242252Z",
     "iopub.status.busy": "2025-08-21T19:30:30.241572Z",
     "iopub.status.idle": "2025-08-21T19:30:40.973142Z",
     "shell.execute_reply": "2025-08-21T19:30:40.971710Z"
    },
    "papermill": {
     "duration": 10.737943,
     "end_time": "2025-08-21T19:30:40.974990",
     "exception": false,
     "start_time": "2025-08-21T19:30:30.237047",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/trojan-horse-hunt-in-space/sample_submission_solution.csv\n",
      "/kaggle/input/trojan-horse-hunt-in-space/clean_train_data.csv\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_5/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_5/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_42/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_42/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_22/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_22/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_41/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_41/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_43/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_43/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_17/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_17/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_44/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_44/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_3/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_3/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_13/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_13/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_10/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_10/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_15/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_15/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_36/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_36/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_38/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_38/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_1/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_1/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_33/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_33/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_23/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_23/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_45/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_45/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_7/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_7/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_11/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_11/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_16/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_16/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_14/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_14/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_19/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_19/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_20/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_20/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_24/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_24/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_29/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_29/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_35/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_35/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_6/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_6/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_4/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_4/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_34/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_34/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_40/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_40/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_2/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_2/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_37/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_37/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_26/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_26/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_39/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_39/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_21/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_21/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_28/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_28/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_25/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_25/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_27/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_27/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_30/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_30/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_18/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_18/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_31/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_31/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_9/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_9/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_8/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_8/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_12/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_12/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_32/poisoned_model.pt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/poisoned_models/poisoned_model_32/poisoned_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/clean_model/clean_model.pt.ckpt\n",
      "/kaggle/input/trojan-horse-hunt-in-space/clean_model/clean_model.pt\n"
     ]
    }
   ],
   "source": [
    "#All library\n",
    "\n",
    "import numpy as np \n",
    "import pandas as pd \n",
    "import torch\n",
    "import torch.nn as nn\n",
    "import torch.optim as optim\n",
    "from torch.utils.data import DataLoader, Dataset\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from tqdm import tqdm\n",
    "import os\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "58b51b1a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-21T19:30:40.981687Z",
     "iopub.status.busy": "2025-08-21T19:30:40.981226Z",
     "iopub.status.idle": "2025-08-21T19:30:41.767980Z",
     "shell.execute_reply": "2025-08-21T19:30:41.766847Z"
    },
    "papermill": {
     "duration": 0.791842,
     "end_time": "2025-08-21T19:30:41.769842",
     "exception": false,
     "start_time": "2025-08-21T19:30:40.978000",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = pd.read_csv('/kaggle/input/trojan-horse-hunt-in-space/clean_train_data.csv')\n",
    "df1=pd.read_csv ('/kaggle/input/trojan-horse-hunt-in-space/sample_submission_solution.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "f9c3c627",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-21T19:30:41.776026Z",
     "iopub.status.busy": "2025-08-21T19:30:41.775633Z",
     "iopub.status.idle": "2025-08-21T19:30:41.787753Z",
     "shell.execute_reply": "2025-08-21T19:30:41.786758Z"
    },
    "papermill": {
     "duration": 0.017294,
     "end_time": "2025-08-21T19:30:41.789633",
     "exception": false,
     "start_time": "2025-08-21T19:30:41.772339",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Set random seeds for reproducibility\n",
    "torch.manual_seed(42)\n",
    "np.random.seed(42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "b5c3d6a0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-21T19:30:41.796427Z",
     "iopub.status.busy": "2025-08-21T19:30:41.796061Z",
     "iopub.status.idle": "2025-08-21T19:30:41.802655Z",
     "shell.execute_reply": "2025-08-21T19:30:41.801449Z"
    },
    "papermill": {
     "duration": 0.012091,
     "end_time": "2025-08-21T19:30:41.804650",
     "exception": false,
     "start_time": "2025-08-21T19:30:41.792559",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "class TimeSeriesDataset(Dataset):\n",
    "    #Dataset class for time series data\n",
    "    def __init__(self, data, sequence_length=100, forecast_horizon=75):\n",
    "        self.data = torch.FloatTensor(data)\n",
    "        self.seq_len = sequence_length\n",
    "        self.forecast_len = forecast_horizon\n",
    "        \n",
    "    def __len__(self):\n",
    "        return len(self.data) - self.seq_len - self.forecast_len + 1\n",
    "    \n",
    "    def __getitem__(self, idx):\n",
    "        x = self.data[idx:idx + self.seq_len]\n",
    "        y = self.data[idx + self.seq_len:idx + self.seq_len + self.forecast_len]\n",
    "        return x, y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "49c6b450",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-21T19:30:41.810754Z",
     "iopub.status.busy": "2025-08-21T19:30:41.810414Z",
     "iopub.status.idle": "2025-08-21T19:30:41.816270Z",
     "shell.execute_reply": "2025-08-21T19:30:41.815276Z"
    },
    "papermill": {
     "duration": 0.010735,
     "end_time": "2025-08-21T19:30:41.817855",
     "exception": false,
     "start_time": "2025-08-21T19:30:41.807120",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Detecting the trojans in poisoned models\n",
    "class Trojandetector:\n",
    "    def __init__(self, clean_model_path, poisoned_model_dir, clean_data_path):\n",
    "        self.clean_model_path = clean_model_path\n",
    "        self.poisoned_model_dir = poisoned_model_dir\n",
    "        self.clean_data_path = clean_data_path\n",
    "        # Load the clean data\n",
    "        self.clean_data = self.load_clean_data()\n",
    "\n",
    "        #model parameters\n",
    "        self.input_dim = 3 #we only have 3 channels 44 , 45 , 46\n",
    "        self.sequence_length = 736000\n",
    "        self.forecast_horizon = 75\n",
    "\n",
    "        #loading the model\n",
    "        self.clean_model = self.load_model(clean_model_path)\n",
    "        self.poisoned_models = self.load_poisoned_models()\n",
    "\n",
    "        \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "8e864d1c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-21T19:30:41.823884Z",
     "iopub.status.busy": "2025-08-21T19:30:41.823535Z",
     "iopub.status.idle": "2025-08-21T19:30:41.831744Z",
     "shell.execute_reply": "2025-08-21T19:30:41.830776Z"
    },
    "papermill": {
     "duration": 0.013183,
     "end_time": "2025-08-21T19:30:41.833495",
     "exception": false,
     "start_time": "2025-08-21T19:30:41.820312",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Loading and preprocessing the train data\n",
    "def load_clean_data(self) : \n",
    "        print(\"Cleaned train data\")\n",
    "        clean_data = pd.read.csv(self.clean_data_path)\n",
    "\n",
    "#extracting the 3 channels\n",
    "        channels = ['channel_44', 'channel_45', 'channel_46']\n",
    "        data = clean_data[channels].values\n",
    "#normalize\n",
    "        scaler = StandardScaler()\n",
    "        normalized_data = scaler.fit_tranform(clean_data)\n",
    "        self.scaler =scaler\n",
    "        return normalized_data\n",
    "#load the pytorch model\n",
    "def load_model(self, model_path) :\n",
    "    try: \n",
    "        model = torch.load(model_path, map_location('cpu'))   \n",
    "        model.eval()\n",
    "        return model\n",
    "    except Exception as exc :\n",
    "        print(f\"Error {model_path} : {exc}\")\n",
    "        return None\n",
    "#Load all poisoned models   \n",
    "def load_poisoned_models(self):\n",
    "    \n",
    "        models = {}\n",
    "        if os.path.exists(self.poisoned_models_dir):\n",
    "            for i in range(1, 46):  # 45 poisoned models for satellite telemetry forecasting \n",
    "                model_path = os.path.join(self.poisoned_models_dir, f\"model_{i}.pt\")\n",
    "                if os.path.exists(model_path):\n",
    "                    models[i] = self.load_model(model_path)\n",
    "                else:\n",
    "                    print(f\"model {i} not found  {model_path}\")\n",
    "        return models        \n",
    "        "
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 12513485,
     "sourceId": 101039,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 31089,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 19.906307,
   "end_time": "2025-08-21T19:30:44.093638",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-08-21T19:30:24.187331",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
